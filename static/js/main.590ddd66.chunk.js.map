{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["isNumeric","val","test","App","useState","a","setA","b","setB","c","setC","d","setD","e","setE","className","value","onChange","target","length","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAGA,SAASA,EAAUC,GACjB,MAAO,UAAUC,KAAKD,GAkDTE,MA/Cf,WACE,MAAkBC,mBAAS,GAA3B,mBAAOC,EAAP,KAAUC,EAAV,KACA,EAAkBF,mBAAS,GAA3B,mBAAOG,EAAP,KAAUC,EAAV,KACA,EAAkBJ,mBAAS,GAA3B,mBAAOK,EAAP,KAAUC,EAAV,KACA,EAAkBN,mBAAS,GAA3B,mBAAOO,EAAP,KAAUC,EAAV,KACA,EAAkBR,mBAAS,GAA3B,mBAAOS,EAAP,KAAUC,EAAV,KA4BA,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uBAAOC,MAAOX,EAAGY,SA7BP,SAAC,GAAuB,IAAbD,EAAY,EAArBE,OAASF,OACrBhB,EAAUgB,IAA2B,IAAjBA,EAAMG,SAAcb,EAAKU,MA6B7C,uBAAOA,MAAOT,EAAGU,SA3BP,SAAC,GAAuB,IAAbD,EAAY,EAArBE,OAASF,OACrBhB,EAAUgB,IAA2B,IAAjBA,EAAMG,SAAcX,EAAKQ,MA2B7C,uBAAOA,MAAOP,EAAGQ,SAzBP,SAAC,GAAuB,IAAbD,EAAY,EAArBE,OAASF,OACrBhB,EAAUgB,IAA2B,IAAjBA,EAAMG,SAAcT,EAAKM,MAyB7C,uBAAOA,MAAOL,EAAGM,SAvBP,SAAC,GAAuB,IAAbD,EAAY,EAArBE,OAASF,OACrBhB,EAAUgB,IAA2B,IAAjBA,EAAMG,SAAcP,EAAKI,MAuB7C,uBAAOA,MAAOH,EAAGI,SArBP,SAAC,GAAuB,IAAbD,EAAY,EAArBE,OAASF,OACrBhB,EAAUgB,IAA2B,IAAjBA,EAAMG,SAAcL,EAAKE,MAqB7C,qBAAKD,UAAU,MAAf,UAjBOK,SAASf,IAAM,IACfe,SAASb,IAAM,IACfa,SAASX,IAAM,IACfW,SAAST,IAAM,IACfS,SAASP,IAAM,WCvBfQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.590ddd66.chunk.js","sourcesContent":["import './App.css';\nimport react, { useState } from 'react';\n\nfunction isNumeric(val) {\n  return /^-?\\d+$/.test(val);\n}\n\nfunction App() {\n  const [a, setA] = useState(0);\n  const [b, setB] = useState(0);\n  const [c, setC] = useState(0);\n  const [d, setD] = useState(0);\n  const [e, setE] = useState(0);\n\n  const changeA = ({target: {value}}) => {\n    if (isNumeric(value) || value.length === 0) setA(value);\n  }\n  const changeB = ({target: {value}}) => {\n    if (isNumeric(value) || value.length === 0) setB(value);\n  }\n  const changeC = ({target: {value}}) => {\n    if (isNumeric(value) || value.length === 0) setC(value);\n  }\n  const changeD = ({target: {value}}) => {\n    if (isNumeric(value) || value.length === 0) setD(value);\n  }\n  const changeE = ({target: {value}}) => {\n    if (isNumeric(value) || value.length === 0) setE(value);\n  }\n\n  const add = () => {\n    const aa = parseInt(a) || 0\n    const bb = parseInt(b) || 0\n    const cc = parseInt(c) || 0\n    const dd = parseInt(d) || 0\n    const ee = parseInt(e) || 0\n    return aa + bb + cc + dd + ee;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className='calc'>\n        <input value={a} onChange={changeA}/>\n        <input value={b} onChange={changeB}/>\n        <input value={c} onChange={changeC}/>\n        <input value={d} onChange={changeD}/>\n        <input value={e} onChange={changeE}/>\n        <div className='sum'>{add()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}